// Code generated by visitor_generator. DO NOT EDIT.
package ast

import "github.com/cheekybits/genny/generic"

//T is a generic type
type Something generic.Type
type Another generic.Type
type Ctx generic.Type

//SomethingAnotherVisitor is an AST visitor that returns Another for expressions and Something for everything elsd
type SomethingAnotherVisitor interface {

	//VisitRHS visits AST node RHS
	VisitRHS(node RHS, ctx Ctx) Another

	//VisitExpression visits AST node Expression
	VisitExpression(node Expression, ctx Ctx) Another

	//VisitStatement visits AST node Statement
	VisitStatement(node Statement, ctx Ctx) Something

	//VisitAST visits AST node AST
	VisitAST(node AST, ctx Ctx) Something

	//VisitRHSNewPair visits AST node RHSNewPair
	VisitRHSNewPair(node RHSNewPair, ctx Ctx) Another

	//VisitRHSFunctionCall visits AST node RHSFunctionCall
	VisitRHSFunctionCall(node RHSFunctionCall, ctx Ctx) Another

	//VisitPairElem visits AST node PairElem
	VisitPairElem(node PairElem, ctx Ctx) Another

	//VisitMake visits AST node Make
	VisitMake(node Make, ctx Ctx) Another

	//VisitBinOp visits AST node BinOp
	VisitBinOp(node BinOp, ctx Ctx) Another

	//VisitStatLock visits AST node StatLock
	VisitStatLock(node StatLock, ctx Ctx) Something

	//VisitStatSema visits AST node StatSema
	VisitStatSema(node StatSema, ctx Ctx) Something

	//VisitArrayElem visits AST node ArrayElem
	VisitArrayElem(node ArrayElem, ctx Ctx) Another

	//VisitIdent visits AST node Ident
	VisitIdent(node Ident, ctx Ctx) Another

	//VisitFunction visits AST node Function
	VisitFunction(node Function, ctx Ctx) Something

	//VisitParamList visits AST node ParamList
	VisitParamList(node ParamList, ctx Ctx) Something

	//VisitParam visits AST node Param
	VisitParam(node Param, ctx Ctx) Something

	//VisitProgram visits AST node Program
	VisitProgram(node Program, ctx Ctx) Something

	//VisitStatSkip visits AST node StatSkip
	VisitStatSkip(node StatSkip, ctx Ctx) Something

	//VisitStatRead visits AST node StatRead
	VisitStatRead(node StatRead, ctx Ctx) Something

	//VisitStatFree visits AST node StatFree
	VisitStatFree(node StatFree, ctx Ctx) Something

	//VisitStatNewassign visits AST node StatNewassign
	VisitStatNewassign(node StatNewassign, ctx Ctx) Something

	//VisitStatPrint visits AST node StatPrint
	VisitStatPrint(node StatPrint, ctx Ctx) Something

	//VisitStatPrintln visits AST node StatPrintln
	VisitStatPrintln(node StatPrintln, ctx Ctx) Something

	//VisitStatExit visits AST node StatExit
	VisitStatExit(node StatExit, ctx Ctx) Something

	//VisitStatFor visits AST node StatFor
	VisitStatFor(node StatFor, ctx Ctx) Something

	//VisitStatWhile visits AST node StatWhile
	VisitStatWhile(node StatWhile, ctx Ctx) Something

	//VisitStatDoWhile visits AST node StatDoWhile
	VisitStatDoWhile(node StatDoWhile, ctx Ctx) Something

	//VisitStatBegin visits AST node StatBegin
	VisitStatBegin(node StatBegin, ctx Ctx) Something

	//VisitStatAssign visits AST node StatAssign
	VisitStatAssign(node StatAssign, ctx Ctx) Something

	//VisitStatReturn visits AST node StatReturn
	VisitStatReturn(node StatReturn, ctx Ctx) Something

	//VisitStatIf visits AST node StatIf
	VisitStatIf(node StatIf, ctx Ctx) Something

	//VisitWaccRoutine visits AST node WaccRoutine
	VisitWaccRoutine(node WaccRoutine, ctx Ctx) Something

	//VisitStatMultiple visits AST node StatMultiple
	VisitStatMultiple(node StatMultiple, ctx Ctx) Something

	//VisitTernaryOp visits AST node TernaryOp
	VisitTernaryOp(node TernaryOp, ctx Ctx) Another

	//VisitLiteral visits AST node Literal
	VisitLiteral(node Literal, ctx Ctx) Another

	//VisitUnOp visits AST node UnOp
	VisitUnOp(node UnOp, ctx Ctx) Another

	//VisitUserType visits AST node UserType
	VisitUserType(node UserType, ctx Ctx) Something
}
